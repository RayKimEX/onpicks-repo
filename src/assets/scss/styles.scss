@import 'abstracts/variables';


/********** mixins ***********/

@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) { @content };    //600px
  }
  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) { @content };     //900px
  }
  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) { @content };    //1200px
  }
  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 112.5em) { @content };    //1800
  }
}
/**************************/



/********** Base **********/
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  // This defines what 1rem is
  font-size: 62.5%; //1 rem = 10px; 10px/16px = 62.5%

}

body {
  box-sizing: border-box;
  padding : 0 8rem;
  -webkit-font-smoothing: antialiased;

}

main {
  position:relative;
}

a {
  text-decoration-line: none;
  color : #AAAAAA;
  font-weight:500;
}
/**************************/



/******** Utility ********/
.u-margin-bottom {
  margin-bottom: 4rem !important;
}
/**************************/



/******* Typography *******/
@font-face {
  font-family: Roboto;
  src : url(../../assets/fonts/Roboto-Bold.ttf);
  font-weight: 700;
}

@font-face {
  font-family: Roboto;
  src : url(../../assets/fonts/Roboto-Medium.ttf);
  font-weight: 500;
}

@font-face {
  font-family: Roboto;
  src : url(../../assets/fonts/Roboto-Regular.ttf);
  font-weight: 400;
}



body {
  font-family: "Roboto", sans-serif;
}

h1 {
  font-size:6.4rem;
}

.heading-quaternary {
  font-size : 1.8rem;
  line-height: 1.39;
  letter-spacing: 0.03rem;//0.3px;
  font-weight: 500;
  color : $color-dark-black;
  margin-bottom:2.4rem;
}

.heading-quinary {

}

.heading-senary {

}
/**************************/



/********** Grid **********/
.row {
  max-width : $grid-width;
  margin: 0 auto;

  // &:last-child {
  //     margin-bottom: $row-margin-bottom;
  // }

  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }

  @include clearfix;

  /* class이름이 col로 시작한다는 말임 */
  [class ^= "col-"]{
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;

    }

    @include respond(tp) {
      width: 100% !important;
    }
  }

  @include respond(tl) {
    padding : 0 2rem;
  }

  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-12 {
    width: calc((100% - 11 * #{$gutter-horizontal}) / 12);
  }

  .col-5-of-12 {
    width: calc(5 * ((100% - 11 * #{$gutter-horizontal}) / 12) + 4 * #{$gutter-horizontal});
  }

  //     .col-3-of-4 {
  //         width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
  //     }

  .col-6-of-12 {
    width: calc(6 * ((100% - 11 * #{$gutter-horizontal}) / 12) + 5 * #{$gutter-horizontal});
  }


  .col-7-of-12 {
    width: calc(7 * ((100% - 11 * #{$gutter-horizontal}) / 12) + 6 * #{$gutter-horizontal});
  }
}

